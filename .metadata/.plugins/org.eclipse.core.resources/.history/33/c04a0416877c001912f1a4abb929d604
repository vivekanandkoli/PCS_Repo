package PCS_EDO_Module;

import java.text.SimpleDateFormat;
import java.util.Calendar;

import org.kale.pcs.TestDataReaders.ExcelFileReader;
import org.kale.pcs.TestDataReaders.PropertiesFileReader;
import org.kale.pcs.TestDataReaders.TestDataCollection;
import org.kale.pcs.TestDataReaders.TestDataReader;
import org.kale.pcs.TestDataReaders.TestDataReaderFactory;
import org.kale.pcs.pages.LoginPage;
import org.kale.pcs.sdk.BaseClass;
import org.kale.pcs.sdk.Variables_Declaration;
import org.kale.pcs.utils.WriteExcel;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

public class EDO extends BaseClass
{
	Variables_Declaration vd=new Variables_Declaration();
	WriteExcel rw = new WriteExcel();
	LoginPage lp=new LoginPage(driver);
	
	@BeforeClass
	public void ReadData_UserDetails() throws Exception
	{
		TestDataReader tdr=TestDataReaderFactory.getInstance().open("test_data\\user-accounts.yml");
		TestDataCollection tdc=tdr.getCollection("login_FrieghtForwarder");
		
		vd.drpEntity_FrieghtForwarder=tdc.getString("entity_FrieghtForwarder");
		vd.username_FrieghtForwarder=tdc.getString("username_FrieghtForwarder");
		vd.password_FrieghtForwarder=tdc.getString("password_FrieghtForwarder");
		
//		PropertiesFileReader pfr=new PropertiesFileReader();
//		pfr.loadPropertiesFile();
//		vd.s = new SimpleDateFormat("dd.MM.yyyy").format(Calendar.getInstance().getTime());
//		vd.folderpath = pfr.getPropertyValue("Report_folder_path")+vd.s;
//      vd.ExcelSavePath = rw.foldercreate(vd.folderpath);        
	}	

	@BeforeMethod
	public void ReadData_LineNoDetails() throws Exception
	{
		PropertiesFileReader pfr=new PropertiesFileReader();
		pfr.loadPropertiesFile();
		String TestDataExcel=pfr.getPropertyValue("testdata_path");
		vd.Notice1_UploadFilePath=pfr.getPropertyValue("Notice1_UploadFilePath");
		ExcelFileReader efr=new ExcelFileReader(TestDataExcel);
		String SheetName="EDO";
		vd.i++;
		vd.Container_Line_Agent=efr.getCellData(SheetName, "Container_Line_Agent",vd.i);
		vd.Container_Line_Agent_Code=efr.getCellData(SheetName, "Container_Line_Agent_Code",vd.i);
		vd.Vessel_Line_Agent_Code=efr.getCellData(SheetName, "Vessel_Line_Agent_Code",vd.i);
		vd.Import_Manifest_No=efr.getCellData(SheetName, "Import_Manifest_No",vd.i);
		vd.Import_Manifest_Date=efr.getCellData(SheetName, "Import_Manifest_Date",vd.i);
		vd.Bill_of_Lading_No=efr.getCellData(SheetName, "Bill_of_Lading_No",vd.i);
		vd.Bill_of_Lading_Date=efr.getCellData(SheetName, "Bill_of_Lading_Date",vd.i);
		vd.Consignee=efr.getCellData(SheetName, "Consignee",vd.i);
		
		vd.Consignee_Address=efr.getCellData(SheetName, "Consignee_Address",vd.i);
		vd.Total_No_of_BL_Pkgs=efr.getCellData(SheetName, "Total_No_of_BL_Pkgs",vd.i);
		vd.BL_Weight=efr.getCellData(SheetName, "BL_Weight",vd.i);
		vd.Volume=efr.getCellData(SheetName, "Volume",vd.i);
		vd.Vessel_Name=efr.getCellData(SheetName, "Vessel_Name",vd.i);
		vd.Voyage_No=efr.getCellData(SheetName, "Voyage_No",vd.i);
		
		vd.Container_Line_Agent=efr.getCellData(SheetName, "Container_Line_Agent",vd.i);
		vd.Container_Line_Agent=efr.getCellData(SheetName, "Container_Line_Agent",vd.i);
		vd.Container_Line_Agent=efr.getCellData(SheetName, "Container_Line_Agent",vd.i);
		vd.Container_Line_Agent=efr.getCellData(SheetName, "Container_Line_Agent",vd.i);
		vd.Container_Line_Agent=efr.getCellData(SheetName, "Container_Line_Agent",vd.i);
		
		vd.Container_Line_Agent=efr.getCellData(SheetName, "Container_Line_Agent",vd.i);
		vd.Container_Line_Agent=efr.getCellData(SheetName, "Container_Line_Agent",vd.i);
		vd.Container_Line_Agent=efr.getCellData(SheetName, "Container_Line_Agent",vd.i);
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	}

	@Test
	public void Login_FF()
	{
		LoginPage lp=new LoginPage(driver);
		lp.login(vd.drpEntity_FrieghtForwarder,vd.username_FrieghtForwarder, vd.password_FrieghtForwarder);
		
		
	}
}

